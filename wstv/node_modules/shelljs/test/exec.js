function numLines(e){return typeof e=="string"?e.match(/\n/g).length:0}var shell=require(".."),assert=require("assert"),path=require("path"),fs=require("fs"),child=require("child_process");shell.silent(!0),shell.exec(),assert.ok(shell.error());var result=shell.exec("asdfasdf");assert.ok(result.code>0);var result=shell.exec('node -e "console.log(1234);"');assert.equal(shell.error(),null),assert.equal(result.code,0),assert.ok(result.output==="1234\n"||result.output==="1234\nundefined\n");var result=shell.exec('node -e "console.error(1234);"');assert.equal(shell.error(),null),assert.equal(result.code,0),assert.ok(result.output==="1234\n"||result.output==="1234\nundefined\n");var result=shell.exec('node -e "console.error(1234); console.log(666);"');assert.equal(shell.error(),null),assert.equal(result.code,0),assert.ok(result.output==="1234\n666\n"||result.output==="1234\n666\nundefined\n");var result=shell.exec('node -e "process.exit(12);"');assert.equal(shell.error(),null),assert.equal(result.code,12),shell.cd("resources/external");var result=shell.exec("node node_script.js");assert.equal(shell.error(),null),assert.equal(result.code,0),assert.equal(result.output,"node_script_1234\n"),shell.cd("../..");var c=shell.exec('node -e "console.log(1234)"',{async:!0});assert.equal(shell.error(),null),assert.ok("stdout"in c,"async exec returns child process object");var asyncFlags=[];asyncFlags[0]=!1,shell.exec('node -e "console.log(5678);"',{async:!0},function(e,t){assert.equal(e,0),assert.ok(t==="5678\n"||t==="5678\nundefined\n"),asyncFlags[0]=!0,shell.exit(123)}),assert.equal(shell.error(),null);